#!/usr/bin/env python3
"""Test script for inline rename functionality.

Tests:
1. Right-click on file ‚Üí Rename ‚Üí Edit inline (no dialog)
2. Right-click on folder ‚Üí Rename ‚Üí Edit inline (no dialog)
3. Cancel editing with Escape key
4. Validate .shy extension is preserved for files
"""

import os
import sys

# Add src to path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

try:
    import gi
    gi.require_version('Gtk', '3.0')
    from gi.repository import Gtk, GLib
except ImportError as e:
    print(f"ERROR: GTK3 not available: {e}")
    sys.exit(1)

from shypn.helpers.file_explorer_panel import FileExplorerPanel


class TestWindow(Gtk.Window):
    """Test window for inline rename."""
    
    def __init__(self):
        super().__init__(title="Inline Rename Test")
        self.set_default_size(500, 600)
        self.connect('destroy', Gtk.main_quit)
        
        # Create builder and load UI
        builder = Gtk.Builder()
        ui_file = os.path.join(os.path.dirname(__file__), 'ui', 'panels', 'left_panel_vscode.ui')
        builder.add_from_file(ui_file)
        
        # Get the main container from the UI
        main_box = builder.get_object('left_panel_main_box')
        
        # Create file explorer panel
        workspace = os.path.join(os.path.dirname(__file__), 'workspace')
        self.file_panel = FileExplorerPanel(builder, base_path=workspace, root_boundary=workspace)
        
        # Add to window
        self.add(main_box)
        self.show_all()
        
        # Print test instructions
        print("\n" + "="*70)
        print("INLINE RENAME FUNCTIONALITY TEST")
        print("="*70)
        print("\nüìù TEST PROCEDURE:")
        print("\n1. RIGHT-CLICK on a file in the tree")
        print("   ‚Üí Select 'Rename' from context menu")
        print("   ‚Üí File name should become EDITABLE INLINE (no dialog!)")
        print("   ‚Üí Edit the name and press ENTER")
        print("   ‚Üí File should be renamed")
        print("   ‚úì Expected: NO DIALOG, inline editing only")
        
        print("\n2. RIGHT-CLICK on a folder in the tree")
        print("   ‚Üí Select 'Rename' from context menu")
        print("   ‚Üí Folder name should become EDITABLE INLINE")
        print("   ‚Üí Edit the name and press ENTER")
        print("   ‚Üí Folder should be renamed")
        print("   ‚úì Expected: NO DIALOG, inline editing only")
        
        print("\n3. START RENAME and press ESCAPE")
        print("   ‚Üí Name should revert to original")
        print("   ‚Üí No changes made")
        print("   ‚úì Expected: Cancel works properly")
        
        print("\n4. RENAME a .shy file WITHOUT typing .shy")
        print("   ‚Üí Type just the base name (e.g., 'mymodel')")
        print("   ‚Üí Press ENTER")
        print("   ‚Üí .shy extension should be auto-added")
        print("   ‚úì Expected: Extension preserved automatically")
        
        print("\n5. TRY TO RENAME to existing name")
        print("   ‚Üí Should show error message")
        print("   ‚Üí Name should not change")
        print("   ‚úì Expected: Duplicate names prevented")
        
        print("\n" + "="*70)
        print("üöÄ Application ready. Start testing!")
        print("="*70 + "\n")


def main():
    """Run the test."""
    try:
        window = TestWindow()
        Gtk.main()
    except Exception as e:
        print(f"\n‚ùå ERROR during test: {e}")
        import traceback
        traceback.print_exc()
        return 1
    
    print("\n‚úÖ Test completed")
    return 0


if __name__ == '__main__':
    sys.exit(main())
